# Longstanding SPI used by WebKitLegacy before we started auditing SPI use.
# NEVER add to this list, only remove!

[legacy.legacy]
classes = [
    "LSAppLink",
    "NSCalendarDate",
    "NSURLDownload",
    "_LSOpenConfiguration",
    "NSURLFileTypeMappings",
]
selectors = [
    "_CFURLCache",
    "_downloadWithLoadingConnection:request:response:delegate:proxy:",
    "_downloadWithRequest:delegate:directory:",
    "_scrollTo:animate:",
    "_web_hasCaseInsensitivePrefix:",
    "_web_removeFileOnlyAtPath:",
    "_web_stringByExpandingTildeInPath",
    "_webthread_webView:didFinishDocumentLoadForFrame:",
    "_webthread_webView:didFinishLoadForFrame:",
    "_webthread_webView:tileDidDraw:",
    "addCommitHandler:forPhase:",
    "calendarDate",
    "cancel:",
    "cancelNotification:",
    "cgPDFDocument",
    "dateByAddingYears:months:days:hours:minutes:seconds:",
    "notificationDestroyed:",
    "openWithURL:configuration:completionHandler:",
    "plugInViewWithArguments:",
    "pluginDestroy",
    "pluginInitialize",
    "pluginStart",
    "pluginStop",
    "pluginViewWithArguments:",
    "policyForOrigin:",
    "populateVisitedLinksForWebView:",
    "rectValue",
    "setCanDrawConcurrently:",
    "setContainingWindow:",
    "showNotification:fromWebView:",
    "valueWithSize:",
    "viewWillClose",
    "webCryptoMasterKeyForWebView:",
    "webFrame:didFinishLoadWithError:",
    "webPlugInDestroy",
    "webPlugInInitialize",
    "webPlugInMainResourceDidFailWithError:",
    "webPlugInMainResourceDidFinishLoading",
    "webPlugInMainResourceDidReceiveData:",
    "webPlugInMainResourceDidReceiveResponse:",
    "webPlugInStart",
    "webPlugInStop",
    "webPlugInStopForPageCache",
    "webThreadWebView:didLayout:",
    "webThreadWebView:didLoadResourceFromMemoryCache:response:length:fromDataSource:",
    "webThreadWebView:identifierForInitialRequest:fromDataSource:",
    "webThreadWebView:resource:didFailLoadingWithError:fromDataSource:",
    "webThreadWebView:resource:didFinishLoadingFromDataSource:",
    "webThreadWebView:resource:didReceiveContentLength:fromDataSource:",
    "webThreadWebView:resource:didReceiveResponse:fromDataSource:",
    "webThreadWebView:resource:willCacheResponse:fromDataSource:",
    "webThreadWebView:resource:willSendRequest:redirectResponse:fromDataSource:",
    "webThreadWebViewDidLayout:byScrolling:",
    "webView:addMessageToConsole:",
    "webView:decidePolicyForGeolocationRequestFromOrigin:frame:listener:",
    "webView:decidePolicyForNotificationRequestFromOrigin:listener:",
    "webView:didClickNotification:",
    "webView:didCloseNotifications:",
    "webView:didDrawFrame:",
    "webView:didNavigateWithNavigationData:inFrame:",
    "webView:didParseSource:baseLineNumber:fromURL:sourceId:forWebFrame:",
    "webView:didParseSource:fromURL:sourceId:forWebFrame:",
    "webView:didPerformClientRedirectFromURL:toURL:inFrame:",
    "webView:didPerformServerRedirectFromURL:toURL:inFrame:",
    "webView:didPressMissingPluginButton:",
    "webView:didShowNotification:",
    "webView:enterFullScreenForElement:listener:",
    "webView:exceptionWasRaised:hasHandler:sourceId:line:forWebFrame:",
    "webView:exceptionWasRaised:sourceId:line:forWebFrame:",
    "webView:exitFullScreenForElement:listener:",
    "webView:failedToParseSource:baseLineNumber:fromURL:withError:forWebFrame:",
    "webView:frame:exceededDatabaseQuotaForSecurityOrigin:database:",
    "webView:printFrame:",
    "webView:shouldLoadMediaURL:inFrame:",
    "webView:shouldPaintBrokenImageForURL:",
    "webView:supportsFullScreenForElement:withKeyboard:",
    "webView:updateHistoryTitle:forURL:",
    "webView:updateHistoryTitle:forURL:inFrame:",
    "webViewCanCheckGeolocationAuthorizationStatus:",
    "sharedMappings",
    "valueWithRect:",
    ]
symbols = [
    "__CFHTTPMessageSetResponseURL",
    "__CFNetworkIsKnownHSTSHostWithSession",
    "__CFURLCacheCopyCacheDirectory",
    "__kCFStreamSocketSetNoDelay",
    "_kCFStreamPropertyCONNECTAdditionalHeaders",
    "_kCFStreamPropertyCONNECTProxy",
    "_kCFStreamPropertyCONNECTProxyHost",
    "_kCFStreamPropertyCONNECTProxyPort",
    "_kCFStreamPropertyCONNECTResponse",
    "_kCFStreamPropertySourceApplication",
    "_kCFStreamSocketSecurityLevelTLSv1_2",
    "_kGSEventHardwareKeyboardAvailabilityChangedNotification",
    "_CFHTTPCookieStorageSetCookieAcceptPolicy",
    "_CFStringGetRangeOfCharacterClusterAtIndex",
    "_CFURLCacheSetMemoryCapacity",
    "_CGContextGetType",
    "_CGContextSetBaseCTM",
    "_MGGetBoolAnswer",
    "__CFURLStorageSessionCopyCookieStorage",
]
